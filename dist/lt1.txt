이번 시간에는 코딩 테스트 개요 및 출제 경향에 대해서 알아보겠습니다. 코딩 테스트란 기업 및 기관에서 직원이나 연수생을 선발하기 위한 목적으로 시행하는 시험입니다. 특히 공개 채용을 하는 기업에서는 이러한 코딩 테스트를 주로 이용하는데요. 코딩 테스트를 이용하면 문제 해결 역량을 효율적으로 평가할 수 있고 또한 자동으로 소스 코드를 채점해주는 채점 시스템을 통해 응시자의 수를 효과적으로 줄일 수 있기 때문에 코딩 테스트는 많은 기업에서 채택되고 있습니다. 
특히 이러한 코딩 테스트는 지원자의 수가 수천 명을 넘어가는 대기업 공채에서는 매우 효과적으로 사용될 수가 있겠죠. 
상대적으로 규모가 작은 회사에서는 코딩 테스트를 매번 치르지 않고 개발형 코딩 테스트 등 다양한 형식으로 문제를 출제할 수 있지만 대기업의 경우 지원자의 수가 많기 때문에 모든 지원자를 위해 평가에 많은 인력을 투입하는 것은 어려울 수 있습니다. 이제 그런 측면에서 코딩 테스트는 매우 효과적으로 특히 규모가 큰 기업에서 많이 채택되고 있습니다. 코딩 테스트의 유형은 시험을 어디에서 치르는지에 따라서 두 가지 유형으로 구분할 수 있는데요. 
먼저 온라인 코딩 테스트는 인터넷을 활용하여 프로그래밍 역량을 평가하는 방식이며 이 경우 대체로 타인과 문제 풀이를 공유하지 않는 선에서 인터넷 검색을 허용합니다. 
따라서 기본적인 표준 라이브러리 사용 방법 등을 인터넷에 검색을 해서 자신의 소스 코드에 적용하는 것이 일반적으로 가능합니다. 그리고 오프라인 코딩 테스트는 시험장에 직접 방문하여 치르는 시험입니다. 
대체로 시험장에서 제공하는 컴퓨터 환경을 이용해야 하며 인터넷 검색이 허용되지 않는 경우가 많습니다. 일반적으로 시험이 여러 단계로 나누어질 경우 1차 2차와 같이 앞부분의 시험에서는 온라 코딩 테스트를 먼저 치른 이후에 온라인 코딩 테스를 합격한 다음에 오프라인 코딩 테스트를 치르거나 혹은 면접 방식으로 넘어가는 경우가 많습니다.
그렇기 때문에 it 기업 취업을 위해서 가장 첫 번째로 넘어야 할 장벽이라고 할 수 있는 이 온라인 코딩 테스트에 조금 더 초점을 맞추어서 본 교재를 구성했습니다. 
그렇다면 코딩 테스트를 준비하는 입장에서 어디에서 많은 문제를 접하고 풀어볼 수 있을까요. 바로 온라인 저지에 대해서 기억하시면 좋습니다. 
온라인 저지란 프로그래밍 대회나 바로 온라인 저지에 대해서 기억하시면 좋습니다. 온라인 시스템을 말합니다. 대표적으로 해외 사이트로 코드 코드와 같은 많은 국제대회가 열리고 다양한 프로그래밍 대회 기출 문제가 포함되어 있는 사이트가 존재하고요, 그리고 리트코드와 코드셰프와 같은 사이트도 존재합니다. 특히 리트코드의 경우 기업 코딩 테스트를 준비하기 위한 목적에 다양한 문제들을 풀어볼 수 있으니까요. 이 사이트 또한 참고하시면 좋습니다. 
그리고 국내 기업의 기출 문제가 가장 많이 수록되어 있고 웹사이트가 한글로 만들어져 있어서 이용하기 편리한 사이트로는 백준 온라인 저지 코드 업 프로그래머스 등의 사이트가 존재합니다. 
특히 백준 온라인 젖지에는 정말 많은 대기업 기출 문제들이 존재하고 그리고 문제들을 유형별로 풀어볼 수 있고 또한 굉장히 많은 국내 사용자들이 존재한다는 점에서 여러분들이 코딩 테스트를 준비하는 입장에서 굉장히 많이 방문하게 될 사이트라고 할 수 있습니다. 또한 코드업 같은 경우는 초보자분들이 처음. 코딩 테스트를 접하기에 적절한 사이트 중 하나인데요. 
초급 문제들을 굉장히 다양하게 단계별로 제시하고 있다는 점에서 처음. 알고리즘 문제 풀이를 시작하시는 분들에게 추천합니다. 
그리고 프로그래머스 또한 마찬가지로 인기 it 대기업 문제를 포함해서 굉장히 다양한 문제들을 포함하고 있으니 여기 또한 참고하시는 걸 추천드립니다. 
그렇다면 이러한 코딩 테스트를 준비하기 위해서 가장 적절한 프로그래밍 언어는 무엇일까요. 본 책이 출간되기 전에 2016년부터 2019년 사이에 평균 3회 이상의 코딩 테스트에 응시했던 사람들을 대상으로 하여 설문을 진행한 내용은 다음과 같습니다. 알고리즘 문제 풀이 방식의 코딩 테스트에서 가장 유리한 프로그래밍 언어가 무엇인지 물어보았는데요. 다음과 같이 시 플러스 플러스가 상당히 높은 응답 비중을 차지한 것을 확인할 수 있습니다. 이제 그 뒤를 이어서 파이썬과 자바가 선택을 받았는데요. 시 언어 그리고 시플 뿔은 전통적으로 프로그래밍 언어를 공부할 때 처음으로 많이 선택하는 언어이기도 하고 또한 실질적으로 메모리 관리 측면에서 자유도가 높다는 측면에서 자료 구조 등을 공부할 때 처음으로 접하는 언어이기도 합니다. 그리고 실행 속도가 빠르다는 장점이 있기 때문에 많은 사람들이 알고리즘 문제를 풀 때 또한 이러한 시플을 선택하는 것을 확인할 수 있고요 그리고 파이썬의 경우 나날이 알고리즘 문제 풀이에서 많이 사용되고 있는 언어 중 하나입니다. 파이썬의 경우 굉장히 짧고 간결하게 소스 코드를 작성할 수 있으며 표준 라이브러리가 매우 다양하게 지원이 되며 사용하기가 편리하다는 장점이 있습니다. 특히 알고리즘 대외가 아니라 일반적인 기업 코딩 테스트 목적으로는 이 파이썬은 매우 적합하고 그렇기 때문에 저는 본 교재에 주요 프로그래밍 언어로 이 파이썬을 선택했습니다. 이어서 자바 또한 국내 프로그래머들이 굉장히 많이 사용하는 언어 중 하나인데요. 마찬가지로 알고리즘 문제를 풀 때도 많은 분들이 선택을 해서 사용하고 있습니다. 다만 개인적으로 수행 시간은 이 자바가 시 플러스에 비해서 느린 편이며 그리고 코드의 길이는 이 파이썬과 c 플러스에 비해서 상대적으로 길기 때문에 사실 시간이 촉박한 환경이라고 할 수 있는 알고리즘 대회나 코딩테스트 환경에서는 상대적으로 불리하다는 평가를 받고 있습니다. 다만 프로그래밍 공부를 처음부터 자바를 이용해서 시작을 하셨거나 자바를 사용하는 게 상대적으로 편하다고 느끼시는 분이나 혹은 코딩 테스트가 얼마 남지 않아서 다른 프로그래밍 언어를 추가적으로 배우기 어려운 상황이라면 저는 개인적으로 그대로 자바를 이용하시는 것을 추천드립니다. 다만 코딩 테스트를 위한 프로그래밍 문법을 새롭게 공부하시는 분이나 처음. 시작하시는 분들은 파이썬을 이용하시는 것을 강력하게 추천드립니다. 
일단 언어의 문법 및 표준 라이브러리의 사용 방법이 다른 언어에 비해서 매우 간결하고 빠르게 익힐 수 있다는 점에서 큰 장점을 가지고 있습니다. 이제 이어서 개발형 코딩 테스트에서 가장 유리한 프로그래밍 언어는 무엇인지 마찬가지로 설문을 진행해 보았는데요. 이 설문 결과에서는 파이썬이 압도적으로 높은 응답 비중을 차지했습니다. 일반적으로 프로그램 개발 방식의 코딩 테스트라고 한다면 온라인 코딩 테스트가 치뤄진 이후에 지원자의 수가 많이 좁혀진 다음에 자주 수행되는 코딩 테스트 방식인데요. 어떠한 기한을 주고 그 기한 동안 특정한 기능을 제공 프로그램을 개발해 와야 하는 그러한 프로그램 개발 과제형 문제가 출제가 되기도 하고 혹은 마치 해커톤 방식처럼 5시간 정도부터 길면 하루 이틀까지 특정한 장소에 모여서 문제에서 제시된 어떠한 요구 사항을 만족하는 프로그램을 개발해야 하는 경우도 존재합니다. 대표적으로 카카오 기업이 먼저 온라인 코딩 테스트를 치른 다음에 이제 그 이후에 2차 시험에서는 오프라인에서 지원자들을 모아놓은 뒤에 특정한 서버와 적절한 기능으로 통신을 해야 하는 그러한 프로그램을 만드는 방식의 문제를 출제하고는 합니다. 사실 그러한 상황에서는 수행 시간 1 2초 차이가 그렇게 크게 영향을 미치지 않는 경우도 많으며 어떠한 서버에 api를 호출하는 등의 다양한 통신 라이브러리를 활용해야 하는 경우가 많기 때문에 그러한 측면에서 파이썬이 상당히 유리한 언어라고 평가를 받고 있다고 이해할 수 있습니다. 특히 이 파이썬 같은 경우는 특정한 서버에게 요청을 보내는 리퀘스트 라이브러리와 그리고 서버에서부터 반환된 제이슨 형식의 데이터를 쉽게 파싱할 수 있는 제이슨 라이브러리 등이 표준 라이브러리 형태로 간단하게 사용될 수 있도록 제공이 되고 있기 때문에 일반적인 프로그램 개발 방식의 코딩 테스트에서 이 시 플러스 플러스 자바에 비해서 상대적으로 유리하다고 평가할 수 있습니다. 물론 이제 프로그램 개발 과제가 자바를 이용해서 안드로이드 앱을 개발을 해야 한다든지 혹은 특정 언어를 반드시 이용해야 하는 일부 상황도 존재할 수 있지만요 일반적인 프로그램 개발 방식의 코딩 테스트에서는 이 파이썬은 상당히 유리하다고 말할 수 있습니다. 이제 실제로 코딩 테스트 문제를 풀 때 어떠한 개발 환경을 이용하면 좋을까요. 저는 개인적으로 온라인 코딩 테스트를 준비하는 입장에서는 바로 온라인 개발 환경을 이용하시는 걸 추천드립니다. 바로 대표적으로 리플릿이 존재하는데요. 리플릿은 2020년 기준으로 별도의 회원 가입 및 로그인이 없어도 바로 파이썬 코드를 작성하고 그 실행 결과까지 확인해 볼 수 있으며 필요한 경우 다른 사람에게 소스 코드를 쉽게 공유할 수 있다는 점에서 저는 코딩 테스트를 준비할 때 이 사이트를 이용해 보시는 걸 추천드립니다. 저 또한 실제로 온라인 국제알고리즘 대회나 그리고 다양한 온라인으로 치러지는 기업 코딩 테스트에 참가할 때 이 리플릿을 굉장히 많이 활용하고 있습니다. 또한 이어서 파이썬 큐토월 같은 사이트도 존재하는데요. 이 사이트는 교육 목적으로 실제로 코드를 실행하면서 어떠한 변수에 어떠한 값이 담기고 어떠한 방식으로 처리가 되는지를 보다 상세하게 알려준다는 점에서 처음. 파이썬을 시작하시는 분들에게 추천드리는 사이트 중 하나입니다. 또한 오프라인 개발 환경으로는 파이 참이 존재하는데요. 이 파이 참 같은 경우는 실제로 파이썬을 활용하는 다양한 대규모 프로젝트에서도 많이 사용되는 가장 대표적인 오프라인 개발 환경 중 하나입니다. 실제로 파이썬으로 문제를 푸실 때도 디버깅 과정이 필요하거나 별도로 소스 코드를 로컬 컴퓨터에서 관리하면서 문제를 풀어보고 싶으신 분들은 이 파이 참을 이용해 보 시는 걸 추천드립니다. 물론 일반적으로 온라인 코딩 테스트에서는 소스 코드를 단 하나의 파일로 제출을 하고 특히 알고리즘 문제에서 사용되는 코드 작성 방식이 일반적인 개발과는 조금 차이점이 있다는 점에서 저는 굳이 파이 참을 이용하지 않고 그냥 간단히 온라인 개발 환경을 이용하면서 자신의 블로그나 기터그에 문제 해결을 위한 소스 코드를 기록해 놓는 방식을 더 추천드립니다. 
이어서 시어너 및 c 플러스를 활용하고 싶으신 분들은 빠르게 사용해 볼 수 있는 개발 환경으로 대구시를 추천드립니다. 일반적으로 비주얼 스튜디오나 vs 코드와 같은 다양한 개발 환경도 많이 사용되고 있으니까요. 다양한 개발 환경 중에서 자신에게 적합한 개발환경을 선택해서 사용하시는 걸 추천드립니다. 이어서 알고리즘 코딩 테스트를 준비하는 과정에서 자신만의 소스 코드를 관리하는 습관을 들이시면 좋습니다. 특히 이제 문제 풀이에서 자주 사용되는 알고리즘 코드를 자기가 알아보기 쉬운 형태로 라이브러리화해서 기터브에 올리면 굉장히 좋은데요. 이제 일반적으로 알고리즘 문제 해결을 위한 자신만의 알고리즘 노트를 팀 노트라고 말을 합니다. 국제알고리즘 대회 같은 경우에 3명 정도의 인원이 한 팀을 꾸려서 대회에 참가하며 실제 오프라인 본선 대회에서는 그 팀에서 자주 사용하는 알고리즘 코드를 특정 분량까지 가져올 수 있도록 하는데 이제 이걸 팀 노트라고 부른다는 점에서 통상적으로 사용되는 단어인데요. 이제 자신만의 알고리즘 코드 혹은 자기 팀에서 자주 사용되는 알고리즘 코드를 모아놓은 것을 보통 이렇게 팀 노트라고 말하며 저는 알고리즘 대회나 코딩 테스트를 준비하시는 분들이 각자 한번 자신만의 이런 춤 노트를 관리해 보시는 것을 강력하게 추천합니다. 왜냐하면 이제 각 유형별로 문제를 어느 정도 풀다 보면 문제 유형에 따라서 비슷한 코드 형식을 많이 사용하게 되는데요. 그런 측면에서 특히 온라인 코딩 테스트에 있어서 이러한 팁 노트가 여러분들을 더 빠르게 소스 코드를 작성할 수 있도록 해주는 경우가 많습니다. 이제 실제 it 기업 코딩 테스트의 최신 출제 경향에 대해서 알아보겠습니다. 대부분의 it 대기업들은 알고리즘 코딩 테스트를 시행하고 있습니다. 일반적으로 응시생들에게 2시간부터 5시간 가량의 시간을 주어 여러 개의 정해진 알고리즘 문제들을 풀도록 합니다. 일반적으로 각 기업에서 가장 출제 빈도가 높은 알고리즘 유형은 그리d 구현 그리고 dfs나 bfs를 활용한 탐색 유형의 문제가 많이 출제되고 있습니다. 
실제로 2016년부터 2019년에 출제가 되었던 국내외 주요 it 기업들의 공채에서 등장했던 알고리즘 유형을 분석한 도표는 다음과 같은데요. 확인해 보시면 구현 유형 그리고 그리디 알고리즘 유형 이어서 dfs 및 bfs를 활용해야 하는 문제가 많이 출제되고 있는 걸 확인할 수 있습니다. 이어서 2019년과 2018년도에 출제가 되었던 주요 기업의 코딩 테스트 유형을 분석한 결과는 다음과 같습니다. 2019년의 경우 삼성전자는 이전 연도와 마찬가지로 시험장에서 3시간의 풀이 시간을 주고 두 문제를 풀도록 합니다. 자주 출제되는 문제 유형은 완전 탐색 그리고 시뮬레이션인데요. 이러한 완전 탐색이나 시뮬레이션을 수행하는 과정에서 dfs나 bfs를 활용해야 하는 문제가 많이 출제되고 있습니다. 그렇기 때문에 이 삼성전자를 준비하시는 분들은 dfs와 bfs 많이 접해보시고 풀어보시는 걸 추천드립니다. 커트 라인의 경우 현재 이 출제가 되는 두 문제를 모두 맞추어야 합격할 수 있도록 일반적으로 알려져 있는데요. 물론 이제 한 문제만 푼다고 하더라도 그 한 문제를 굉장히 빠르게 풀면 합격이 되는 경우도 존재하지만 일반적인 경우 이 두 문제를 모두 맞추어야 합격할 수 있다고 알려져 있습니다. 사실 삼성전자의 경우 2016년부터 비슷한 유형의 알고리즘 문제를 출제함에 따라서 알고리즘 기출 문제가 이 삼성전자의 코딩 테스트 기출 문제가 다양한 사이트에서 많이 공유가 되고 있고 문제 유형이 잘 바뀌지 않는다는 점에서 커트라인이 이렇게 두 문제로 형성된 걸 확인할 수 있습니다. 2019년도 이전에는 코딩 테스트에서 합격하는 결과를 보인 것에 반해서 이렇게 2019년도부터는 두 문제를 모두 맞추어야 합격할 수 있다고 보시면 되겠습니다. 그리고 카카오와 라인의 경우 삼성전자에 비해서 더욱 다양한 문제 유형이 출제가 되는 것으로 잘 알려져 있는데요. 특히 카카오의 경우 카카오 기술 블로그에서 이전에 출제가 되었던 문제들에 대한 자세한 설명이 나와 있으니까요. 카카오를 준비하시는 분들은 카카오 기술 블로그에서 그 기출 문제의 풀이 방식을 참고해 보시는 걸 추천드립니다. 카카오와 라인의 경우 일반적으로 문제를 약 절반 이상으로 맞출 수 있다면 합격할 수 있다고 잘 알려져 있습니다. 특히 카카오의 경우 시험이 1차와 2차로 나누어지기 때문에 2차에서는 개발형 코딩 테스트가 이루어집니다. 이제 이때 특정한 서버 api를 이용해서 필요한 데이터를 받아온 다음에 이제 이것을 본인이 작성한 프로그램을 이용해서 적절히 처리한 뒤에 다시 서버로 어떠한 결과를 보내야 하는 등의 문제가 자주 출제되고 있습니다. 이어서 2018년도에 주요 기업 코딩 테스트 유형을 분석한 것은 다음과 같습니다. 삼성전자의 경우 문제 유형은 마찬가지로 dfs 및 bfs를 활용해서 완전 탐색 많이 출제가 되었는데요. 
다만 그 커트라인이 2019년도에 비해서 한 문제로 형성된 것을 확인할 수 있습니다. 그리고 카카오와 라인의 경우 2019년도와 마찬가지로 다양한 문제 유형이 출제가 되었는데요. 마찬가지로 전체 문제의 개수에서 약 절반 정도로 커트란이 형성되었다고 알려져 있습니다. 특히 카카오의 경우 이전부터 구현 위주의 문제가 많이 출제가 되었으며 특히 문자열을 활용하고 처리해야 하는 문제가 많이 출제가 되고 있기 때문에 이를 참고하시고 관련 문제 유형을 많이 풀어보시는 것이 좋습니다. 특히 파이썬의 경우 문자열 처리가 필요한 구현 위주의 문제에서 강점을 보이기 때문에 특히 카카오 코딩 테스트에서 더욱 유리하게 활용될 수 있습니다. 이상으로 이번 시간에는 코딩 테스트 개요 및 주요 기업에서 코 테스트가 어떻게 출제가 되고 있는지에 대해서 알아보는 시간을 가져보았습니다.